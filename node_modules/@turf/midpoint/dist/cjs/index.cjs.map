{"version":3,"sources":["../../index.js"],"names":["midpoint"],"mappings":";;;;AAAA,SAAS,eAAe;AACxB,SAAS,mBAAmB;AAC5B,SAAS,gBAAgB;AAoBzB,SAAS,SAAS,QAAQ,QAAQ;AAChC,MAAI,OAAO,SAAS,QAAQ,MAAM;AAClC,MAAI,UAAU,QAAQ,QAAQ,MAAM;AACpC,MAAIA,YAAW,YAAY,QAAQ,OAAO,GAAG,OAAO;AAEpD,SAAOA;AACT;AANS;AAST,IAAO,wBAAQ","sourcesContent":["import { bearing } from \"@turf/bearing\";\nimport { destination } from \"@turf/destination\";\nimport { distance } from \"@turf/distance\";\n\n/**\n * Takes two {@link Point|points} and returns a point midway between them.\n * The midpoint is calculated geodesically, meaning the curvature of the earth is taken into account.\n *\n * @name midpoint\n * @param {Coord} point1 first point\n * @param {Coord} point2 second point\n * @returns {Feature<Point>} a point midway between `pt1` and `pt2`\n * @example\n * var point1 = turf.point([144.834823, -37.771257]);\n * var point2 = turf.point([145.14244, -37.830937]);\n *\n * var midpoint = turf.midpoint(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2, midpoint];\n * midpoint.properties['marker-color'] = '#f00';\n */\nfunction midpoint(point1, point2) {\n  var dist = distance(point1, point2);\n  var heading = bearing(point1, point2);\n  var midpoint = destination(point1, dist / 2, heading);\n\n  return midpoint;\n}\n\nexport { midpoint };\nexport default midpoint;\n"]}