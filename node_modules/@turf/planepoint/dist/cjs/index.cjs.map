{"version":3,"sources":["../../index.js"],"names":[],"mappings":";;;;AAAA,SAAS,UAAU,eAAe;AAkClC,SAAS,WAAW,OAAO,UAAU;AAEnC,MAAI,QAAQ,SAAS,KAAK;AAC1B,MAAI,OAAO,QAAQ,QAAQ;AAC3B,MAAI,SAAS,KAAK;AAClB,MAAI,QAAQ,OAAO,CAAC;AACpB,MAAI,MAAM,SAAS;AACjB,UAAM,IAAI,MAAM,uDAAuD;AACzE,MAAI,aAAa,SAAS,cAAc,CAAC;AACzC,MAAI,IAAI,WAAW;AACnB,MAAI,IAAI,WAAW;AACnB,MAAI,IAAI,WAAW;AAGnB,MAAI,IAAI,MAAM,CAAC;AACf,MAAI,IAAI,MAAM,CAAC;AACf,MAAI,KAAK,MAAM,CAAC,EAAE,CAAC;AACnB,MAAI,KAAK,MAAM,CAAC,EAAE,CAAC;AACnB,MAAI,KAAK,MAAM,SAAY,IAAI,MAAM,CAAC,EAAE,CAAC;AACzC,MAAI,KAAK,MAAM,CAAC,EAAE,CAAC;AACnB,MAAI,KAAK,MAAM,CAAC,EAAE,CAAC;AACnB,MAAI,KAAK,MAAM,SAAY,IAAI,MAAM,CAAC,EAAE,CAAC;AACzC,MAAI,KAAK,MAAM,CAAC,EAAE,CAAC;AACnB,MAAI,KAAK,MAAM,CAAC,EAAE,CAAC;AACnB,MAAI,KAAK,MAAM,SAAY,IAAI,MAAM,CAAC,EAAE,CAAC;AACzC,MAAI,KACD,MAAM,IAAI,OAAO,IAAI,MACpB,MAAM,IAAI,OAAO,IAAI,MACrB,MAAM,IAAI,OAAO,IAAI,MACrB,MAAM,IAAI,OAAO,IAAI,MACrB,MAAM,IAAI,OAAO,IAAI,MACrB,MAAM,IAAI,OAAO,IAAI,SACrB,IAAI,OAAO,IAAI,OACd,IAAI,OAAO,IAAI,OACf,IAAI,OAAO,IAAI,OACf,IAAI,OAAO,IAAI,OACf,IAAI,OAAO,IAAI,OACf,IAAI,OAAO,IAAI;AAEpB,SAAO;AACT;AAxCS;AA2CT,IAAO,0BAAQ","sourcesContent":["import { getCoord, getGeom } from \"@turf/invariant\";\n\n/**\n * Takes a triangular plane as a {@link Polygon}\n * and a {@link Point} within that triangle and returns the z-value\n * at that point. The Polygon should have properties `a`, `b`, and `c`\n * that define the values at its three corners. Alternatively, the z-values\n * of each triangle point can be provided by their respective 3rd coordinate\n * if their values are not provided as properties.\n *\n * @name planepoint\n * @param {Coord} point the Point for which a z-value will be calculated\n * @param {Feature<Polygon>} triangle a Polygon feature with three vertices\n * @returns {number} the z-value for `interpolatedPoint`\n * @example\n * var point = turf.point([-75.3221, 39.529]);\n * // \"a\", \"b\", and \"c\" values represent the values of the coordinates in order.\n * var triangle = turf.polygon([[\n *   [-75.1221, 39.57],\n *   [-75.58, 39.18],\n *   [-75.97, 39.86],\n *   [-75.1221, 39.57]\n * ]], {\n *   \"a\": 11,\n *   \"b\": 122,\n *   \"c\": 44\n * });\n *\n * var zValue = turf.planepoint(point, triangle);\n * point.properties.zValue = zValue;\n *\n * //addToMap\n * var addToMap = [triangle, point];\n */\nfunction planepoint(point, triangle) {\n  // Normalize input\n  var coord = getCoord(point);\n  var geom = getGeom(triangle);\n  var coords = geom.coordinates;\n  var outer = coords[0];\n  if (outer.length < 4)\n    throw new Error(\"OuterRing of a Polygon must have 4 or more Positions.\");\n  var properties = triangle.properties || {};\n  var a = properties.a;\n  var b = properties.b;\n  var c = properties.c;\n\n  // Planepoint\n  var x = coord[0];\n  var y = coord[1];\n  var x1 = outer[0][0];\n  var y1 = outer[0][1];\n  var z1 = a !== undefined ? a : outer[0][2];\n  var x2 = outer[1][0];\n  var y2 = outer[1][1];\n  var z2 = b !== undefined ? b : outer[1][2];\n  var x3 = outer[2][0];\n  var y3 = outer[2][1];\n  var z3 = c !== undefined ? c : outer[2][2];\n  var z =\n    (z3 * (x - x1) * (y - y2) +\n      z1 * (x - x2) * (y - y3) +\n      z2 * (x - x3) * (y - y1) -\n      z2 * (x - x1) * (y - y3) -\n      z3 * (x - x2) * (y - y1) -\n      z1 * (x - x3) * (y - y2)) /\n    ((x - x1) * (y - y2) +\n      (x - x2) * (y - y3) +\n      (x - x3) * (y - y1) -\n      (x - x1) * (y - y3) -\n      (x - x2) * (y - y1) -\n      (x - x3) * (y - y2));\n\n  return z;\n}\n\nexport { planepoint };\nexport default planepoint;\n"]}